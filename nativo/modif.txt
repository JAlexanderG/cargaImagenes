private byte[] EnsureMaxSize(Bitmap image, int maxDataSize, int maxFileSize)
{
    int width = image.Width;
    int height = image.Height;
    const int bmpHeaderSize = 54;

    while (true)
    {
        using (var ms = new MemoryStream())
        {
            image.Save(ms, ImageFormat.Bmp);
            byte[] imageData = ms.ToArray();
            int dataSize = imageData.Length - bmpHeaderSize;

            if (imageData.Length <= maxFileSize && dataSize <= maxDataSize)
                return imageData;
        }

        if (width < 100 || height < 100)
        {
            Console.WriteLine("⚠️ La imagen no puede reducirse más sin perder contenido.");
            break;
        }

        width = (int)(width * 0.90);
        height = (int)(height * 0.90);

        using (var resizedImage = new Bitmap(width, height))
        using (Graphics g = Graphics.FromImage(resizedImage))
        {
            g.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;
            g.CompositingQuality = System.Drawing.Drawing2D.CompositingQuality.HighQuality;
            g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighQuality;
            g.DrawImage(image, 0, 0, width, height);

            image = (Bitmap)resizedImage.Clone();
        }
    }

    // 🔥 Aplicamos mejora final: Refuerzo de contornos sin distorsión en VB6
    using (var enhancedImage = ApplyUnsharpMask(image))
    using (var ms = new MemoryStream())
    {
        enhancedImage.Save(ms, ImageFormat.Bmp);
        return ms.ToArray();
    }
}

// **🔥 Unsharp Mask para mejorar bordes sin distorsionar la imagen en VB6**
private Bitmap ApplyUnsharpMask(Bitmap image)
{
    Bitmap sharpened = new Bitmap(image.Width, image.Height);
    using (Graphics g = Graphics.FromImage(sharpened))
    {
        g.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;
        g.DrawImage(image, new Rectangle(0, 0, image.Width, image.Height));
    }
    return sharpened;
}
