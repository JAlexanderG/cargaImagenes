private byte[] EnsureMaxSize(Bitmap image, int maxDataSize, int maxFileSize)
{
    int width = image.Width;
    int height = image.Height;
    const int bmpHeaderSize = 54;

    while (true)
    {
        using (var ms = new MemoryStream())
        {
            image.Save(ms, ImageFormat.Bmp);
            byte[] imageData = ms.ToArray();
            int dataSize = imageData.Length - bmpHeaderSize;

            // ✅ Si la imagen ya cumple con los límites, la retornamos
            if (imageData.Length <= maxFileSize && dataSize <= maxDataSize)
                return imageData;
        }

        // 🚨 Evitamos reducir demasiado la imagen
        if (width < 50 || height < 50)
        {
            Console.WriteLine("⚠️ La imagen no puede reducirse más sin perder contenido.");
            break; // Nos quedamos con el tamaño más cercano posible
        }

        // 🔥 Reducimos la imagen en pasos más grandes si sigue fuera del límite
        width = (int)(width * 0.85);
        height = (int)(height * 0.85);

        using (var resizedImage = new Bitmap(image, new Size(width, height)))
        {
            image = (Bitmap)resizedImage.Clone();
        }
    }

    // 🔥 Retornamos la versión más reducida posible si no logramos llegar a 2048 bytes
    using (var ms = new MemoryStream())
    {
        image.Save(ms, ImageFormat.Bmp);
        return ms.ToArray();
    }
}