private byte[] EnsureMaxSize(byte[] imageData, int maxSize)
{
    if (imageData.Length <= maxSize)
        return imageData; // âœ… La imagen ya cumple con el tamaÃ±o lÃ­mite, no hacemos nada.

    using (var memoryStream = new MemoryStream(imageData))
    using (var originalImage = new Bitmap(memoryStream))
    {
        int width = originalImage.Width;
        int height = originalImage.Height;

        // ðŸ”¥ ReducciÃ³n progresiva del tamaÃ±o de la imagen hasta que estÃ© por debajo del lÃ­mite
        while (true)
        {
            // Reducir en 10% cada iteraciÃ³n para evitar pÃ©rdida drÃ¡stica de calidad
            width = (int)(width * 0.9);
            height = (int)(height * 0.9);

            if (width < 1 || height < 1)
                throw new Exception("No se puede reducir mÃ¡s la imagen sin perder contenido.");

            using (var resizedImage = new Bitmap(originalImage, new Size(width, height)))
            using (var ms = new MemoryStream())
            {
                resizedImage.Save(ms, System.Drawing.Imaging.ImageFormat.Bmp);
                byte[] newImageData = ms.ToArray();

                if (newImageData.Length <= maxSize)
                    return newImageData; // âœ… La imagen ya es menor a 2048 bytes, la retornamos.

                // Si aÃºn supera el lÃ­mite, seguimos reduciendo
            }
        }
    }
}