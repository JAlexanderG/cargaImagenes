private byte[] EnsureMaxSize(Bitmap image, int maxDataSize, int maxFileSize)
{
    int width = image.Width;
    int height = image.Height;

    // 🔥 1. Convertimos la imagen a formato 8bpp para compatibilidad con VB6
    using (var compatibleBmp = ConvertTo8bpp(image))
    {
        using (var ms = new MemoryStream())
        {
            compatibleBmp.Save(ms, ImageFormat.Bmp);
            byte[] imageData = ms.ToArray();

            int bmpHeaderSize = 54;
            int dataSize = imageData.Length - bmpHeaderSize;

            // ✅ Si ya cumple los límites, la retornamos
            if (imageData.Length <= maxFileSize && dataSize <= maxDataSize)
                return imageData;
        }

        // 🔥 2. Reducción de tamaño más controlada
        while (true)
        {
            width = (int)(width * 0.95);
            height = (int)(height * 0.95);

            if (width < 100 || height < 100)
            {
                Console.WriteLine("⚠️ La imagen no puede reducirse más sin perder compatibilidad.");
                break;
            }

            using (var resizedImage = new Bitmap(compatibleBmp, new Size(width, height)))
            using (var ms = new MemoryStream())
            {
                resizedImage.Save(ms, ImageFormat.Bmp);
                byte[] imageData = ms.ToArray();

                int dataSize = imageData.Length - 54;

                if (imageData.Length <= maxFileSize && dataSize <= maxDataSize)
                    return imageData;
            }
        }
    }

    // 🔥 Si no logramos cumplir el límite, retornamos la versión más reducida posible
    using (var ms = new MemoryStream())
    {
        image.Save(ms, ImageFormat.Bmp);
        return ms.ToArray();
    }
}

// 🔥 Convertir imagen a 8bpp indexado con paleta para compatibilidad con VB6
private Bitmap ConvertTo8bpp(Bitmap original)
{
    Bitmap bmp8bpp = new Bitmap(original.Width, original.Height, PixelFormat.Format8bppIndexed);
    ColorPalette palette = bmp8bpp.Palette;

    // 🔥 Generar una paleta de 256 tonos de gris
    for (int i = 0; i < 256; i++)
    {
        palette.Entries[i] = Color.FromArgb(i, i, i);
    }
    bmp8bpp.Palette = palette;

    using (Graphics g = Graphics.FromImage(bmp8bpp))
    {
        g.DrawImage(original, new Rectangle(0, 0, bmp8bpp.Width, bmp8bpp.Height));
    }

    return bmp8bpp;
}
